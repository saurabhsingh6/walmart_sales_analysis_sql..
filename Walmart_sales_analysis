use walmart_sales; -- database
-- walmart sales analysis using sql

-- Create table
CREATE TABLE IF NOT EXISTS sales(
	invoice_id VARCHAR(30) NOT NULL PRIMARY KEY,
    branch VARCHAR(5) NOT NULL,
    city VARCHAR(30) NOT NULL,
    customer_type VARCHAR(30) NOT NULL,
    gender VARCHAR(30) NOT NULL,
    product_line VARCHAR(100) NOT NULL,
    unit_price DECIMAL(10,2) NOT NULL,
    quantity INT NOT NULL,
    tax_pct FLOAT(6,4) NOT NULL,
    total DECIMAL(12, 4) NOT NULL,
    date DATETIME NOT NULL,
    time TIME NOT NULL,
    payment VARCHAR(15) NOT NULL,
    cogs DECIMAL(10,2) NOT NULL,
    gross_margin_pct FLOAT(11,9),
    gross_income DECIMAL(12, 4),
    rating FLOAT(2, 1)
);
-- data cleaning
SELECT * FROM walmart_sales;

-- feature engineering

-- add the time_of_day 
select 
time,
( case 
when 'time' between "00:00:00" and "12:00:00" then "Morning"
when 'time' between "12:01:00" and "16:00:00" then "afternoon"
else "evening"
 End ) As time_of_day
 from walmart_sales;

-- add new column time_of_day
alter table walmart_sales add column time_of_day varchar(40);


-- update 
update walmart_sales
set time_of_day = (
      case 
          when Time between "00:00:00" and "12:00:00" then 'Morning'
  when Time between "12:01:00" and "16:00:00" then 'afternoon'
  else 'Evening'
End );

-- day_name
select 
date,
dayname(date)
from walmart_sales;

-- add a column day_name
alter table walmart_sales add column day_name varchar(40);

select * from walmart_sales limit 6;
-- update day_name column
update walmart_sales set day_name = dayname(date);


-- month_name
select date,
monthname(date)
from walmart_sales;

-- add column month_name
alter table walmart_sales add column month_name varchar(40);

-- update month_name
update walmart_sales set month_name = monthname(date);


-- --------------------------------------------------------------------------------------------------
-- (EDA) Exploritory data analysis                       walmart_sales
-- how many the unique city the data have ?
select distinct city from walmart_sales;

-- in which city is each branch
select distinct branch from walmart_sales;

-- how many unique product lines does the data have?           
select distinct Product_line from walmart_sales;

desc  walmart_sales;

select * from walmart_sales limit 5;

-- what are the most common payment method ?
select payment, count(payment) from  walmart_sales group by payment;

select distinct payment from  walmart_sales;

-- what are the most selling product
select * from  walmart_sales;

select product_line, count(product_line) from  walmart_sales group by product_line;

ALTER TABLE walmart_sales CHANGE `Product line` `Product_line` VARCHAR(255);

-- find the total month of revunue generator
select month_name as month from walmart_sales;
-- unique
select count(month_name) from walmart_sales;
select distinct(month_name),sum(Total) from walmart_sales group by month_name;
select (month_name),sum(Total) from walmart_sales group by month_name order by month_name desc;

select * from walmart_sales limit 7;

-- what month had largest cogs
-- What month had the largest COGS?
SELECT
	month_name AS month,
	SUM(cogs) AS cogs
FROM sales
GROUP BY month_name 
ORDER BY cogs;


-- What product line had the largest revenue?
SELECT
	product_line,
	SUM(total) as total_revenue
FROM sales
GROUP BY product_line
ORDER BY total_revenue DESC;

-- What is the city with the largest revenue?
SELECT
	branch,
	city,
	SUM(total) AS total_revenue
FROM sales
GROUP BY city, branch 
ORDER BY total_revenue;


-- What product line had the largest VAT?
SELECT
	product_line,
	AVG(tax_pct) as avg_tax
FROM sales
GROUP BY product_line
ORDER BY avg_tax DESC;


-- Fetch each product line and add a column to those product 
-- line showing "Good", "Bad". Good if its greater than average sales

SELECT 
	AVG(quantity) AS avg_qnty
FROM sales;

SELECT
	product_line,
	CASE
		WHEN AVG(quantity) > 6 THEN "Good"
        ELSE "Bad"
    END AS remark
FROM sales
GROUP BY product_line;


-- Which branch sold more products than average product sold?
SELECT 
	branch, 
    SUM(quantity) AS qnty
FROM sales
GROUP BY branch
HAVING SUM(quantity) > (SELECT AVG(quantity) FROM sales);


-- What is the most common product line by gender
SELECT
	gender,
    product_line,
    COUNT(gender) AS total_cnt
FROM sales
GROUP BY gender, product_line
ORDER BY total_cnt DESC;

-- What is the average rating of each product line
SELECT
	ROUND(AVG(rating), 2) as avg_rating,
    product_line
FROM sales
GROUP BY product_line
ORDER BY avg_rating DESC;

-- --------------------------------------------------------------------
-- --------------------------------------------------------------------

-- --------------------------------------------------------------------
-- -------------------------- Customers -------------------------------
-- --------------------------------------------------------------------

-- How many unique customer types does the data have?
SELECT
	DISTINCT customer_type
FROM sales;

-- How many unique payment methods does the data have?
SELECT
	DISTINCT payment
FROM sales;


-- What is the most common customer type?
SELECT
	customer_type,
	count(*) as count
FROM sales
GROUP BY customer_type
ORDER BY count DESC;

-- Which customer type buys the most?
SELECT
	customer_type,
    COUNT(*)
FROM sales
GROUP BY customer_type;


-- What is the gender of most of the customers?
SELECT
	gender,
	COUNT(*) as gender_cnt
FROM sales
GROUP BY gender
ORDER BY gender_cnt DESC;

-- What is the gender distribution per branch?
SELECT gender, COUNT(*) as gender_cnt FROM sales WHERE branch= "c" GROUP BY gender ORDER BY gender_cnt DESC;
-- Gender per branch is more or less the same hence, I don't think has
-- an effect of the sales per branch and other factors.

-- Which time of the day do customers give most ratings?
SELECT time_of_day, AVG(rating) AS avg_rating FROM sales GROUP BY time_of_day ORDER BY avg_rating DESC;
-- Looks like time of the day does not really affect the rating, its
-- more or less the same rating each time of the day.alter


-- Which time of the day do customers give most ratings per branch?
SELECT time_of_day,AVG(rating) AS avg_rating FROM sales WHERE branch = "A" GROUP BY time_of_day ORDER BY avg_rating DESC;
-- Branch A and C are doing well in ratings, branch B needs to do a 
-- little more to get better ratings.


-- Which day fo the week has the best avg ratings?
SELECT day_name, AVG(rating) AS avg_rating FROM sales GROUP BY day_name  ORDER BY avg_rating DESC;
-- Mon, Tue and Friday are the top best days for good ratings
-- why is that the case, how many sales are made on these days?

-- Which day of the week has the best average ratings per branch?
SELECT  day_name, COUNT(day_name) total_sales FROM sales WHERE branch = "C" GROUP BY day_name ORDER BY total_sales DESC;

-- ---------------------------- Sales ---------------------------------

-- Number of sales made in each time of the day per weekday 
SELECT time_of_day, COUNT(*) AS total_sales FROM sales WHERE day_name = "Sunday" GROUP BY time_of_day  ORDER BY total_sales DESC;
-- Evenings experience most sales, the stores are 
-- filled during the evening hours

-- Which of the customer types brings the most revenue?
SELECT customer_type, SUM(total) AS total_revenue FROM sales GROUP BY customer_type ORDER BY total_revenue;

-- Which city has the largest tax/VAT percent?
SELECT city, ROUND(AVG(tax_pct), 2) AS avg_tax_pct FROM sales GROUP BY city  ORDER BY avg_tax_pct DESC;

-- Which customer type pays the most in VAT?
SELECT customer_type, AVG(tax_pct) AS total_tax FROM sales GROUP BY customer_type ORDER BY total_tax;

select * from walmart_sales;
